<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/util     
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
    <!-- Add support for component scanning -->
    <context:component-scan base-package="com.mycompany.spring_mvc_hibernate" />

    <!-- Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven/>    
    
    <!-- Define Spring MVC view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          name="viewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <!-- 4 steps for connection pool using c3p0 OR dbcp2-->
    
    <!-- Step 1: Define Database DataSource / connection pool -->
<!--    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/web_customer_tracker?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC" />
        <property name="user" value="admin" />
        <property name="password" value="123456" /> 

         these are connection pool properties for C3P0 
        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="30000" />
    </bean>-->
    
      
    <!--using dpcp2-->
    <bean id="myDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value = "com.mysql.cj.jdbc.Driver" />
        <property name="url" value = "jdbc:mysql://localhost:3306/web_customer_tracker?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC" />
        <property name="username" value = "admin" />
        <property name="password" value = "123456" />
        <!--<property name="initialSize" value = "5" /> default=0-->
        <property name="maxIdle" value = "10" /> <!--default=8-->
        <!--<property name="minIdle" value = "0" /> default=0-->
        <property name="maxWaitMillis" value = "10000" />
    </bean>        
          
              
	
    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="com.mycompany.spring_mvc_hibernate" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>	  

    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager" />
    
    
    <!-- Add support for reading web resources: css, images, js, etc ... -->
    <!--define location of images, .css, .js-->
    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
    
    
    
</beans>



